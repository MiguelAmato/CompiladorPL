package asint;

import asint.SintaxisAbstractaEval.*;

public interface Procesamiento {
    void procesa(Prog a);
    void procesa(No_decs a);
    void procesa(Si_decs a);
    void procesa(Muchas_decs a);
    void procesa(Una_dec a);
    void procesa(Dec_id a);
    void procesa(Dec_type a);
    void procesa(Dec_proc a);
    void procesa(No_parF a);
    void procesa(Si_parF a);
    void procesa(Muchos_param a);
    void procesa(Un_param a);
    void procesa(Param_ref a);
    void procesa(Param_cop a);
    void procesa(Tipo_array a);
    void procesa(Tipo_punt a);
    void procesa(Tipo_int a);
    void procesa(Tipo_real a);
    void procesa(Tipo_bool a);
    void procesa(Tipo_string a);
    void procesa(Tipo_id a);
    void procesa(Tipo_struct a);
    void procesa(Info_struct a);
    void procesa(Lista_struct a);
    void procesa(Campo a);
    void procesa(Si_inst a);
    void procesa(No_inst a);
    void procesa(Muchas_instr a);
    void procesa(Una_instr a);
    void procesa(Instr_comp a);
    void procesa(Instr_call a);
    void procesa(Instr_del a);
    void procesa(Instr_new a);
    void procesa(Instr_nl a);
    void procesa(Instr_wr a);
    void procesa(Instr_rd a);
    void procesa(Instr_wh a);
    void procesa(Instr_else a);
    void procesa(Instr_if a);
    void procesa(Instr_eval a);
    void procesa(Si_param_re a);
    void procesa(No_param_re a);
    void procesa(Un_param_re a);
    void procesa(Muchos_param_re a);
    void procesa(Indir a);
    void procesa(Reg a);
    void procesa(Index a);
    void procesa(Menos a);
    void procesa(Not a);
    void procesa(Or a);
    void procesa(And a);
    void procesa(Mod a);
    void procesa(Div a);
    void procesa(Mul a);
    void procesa(Resta a);
    void procesa(Suma a);
    void procesa(Distinto a);
    void procesa(Igual a);
    void procesa(Menor_igual a);
    void procesa(Mayor_igual a);
    void procesa(Menor a);
    void procesa(Mayor a);
    void procesa(Asig a);
    void procesa(Null a);
    void procesa(Id a);
    void procesa(False a);
    void procesa(True a);
    void procesa(Literal_cadena a);
    void procesa(Literal_real a);
    void procesa(Literal_ent a);
}
