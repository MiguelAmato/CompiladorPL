package asint;
import asint.SintaxisAbstractaEval.*;

public class ProcesamientoDef implements Procesamiento {
	
	 	public void procesa(Prog a){}
    public void procesa(No_decs a){}
    public void procesa(Si_decs a){}
    public void procesa(Muchas_decs a){}
    public void procesa(Una_dec a){}
    public void procesa(Dec_id a){}
    public void procesa(Dec_type a){}
    public void procesa(Dec_proc a){}
    public void procesa(No_parF a){}
    public void procesa(Si_parF a){}
    public void procesa(Muchos_param a){}
    public void procesa(Un_param a){}
    public void procesa(Param_ref a){}
    public void procesa(Param_cop a){}
    public void procesa(Tipo_array a){}
    public void procesa(Tipo_punt a){}
    public void procesa(Tipo_int a){}
    public void procesa(Tipo_real a){}
    public void procesa(Tipo_bool a){}
    public void procesa(Tipo_string a){}
    public void procesa(Tipo_id a){}
    public void procesa(Tipo_struct a){}
    public void procesa(Info_struct a){}
    public void procesa(Lista_struct a){}
    public void procesa(Campo a){}
    public void procesa(Si_inst a){}
    public void procesa(No_inst a){}
    public void procesa(Muchas_instr a){}
    public void procesa(Una_instr a){}
    public void procesa(Instr_comp a){}
    public void procesa(Instr_call a){}
    public void procesa(Instr_del a){}
    public void procesa(Instr_new a){}
    public void procesa(Instr_nl a){}
    public void procesa(Instr_wr a){}
    public void procesa(Instr_rd a){}
    public void procesa(Instr_wh a){}
    public void procesa(Instr_else a){}
    public void procesa(Instr_if a){}
    public void procesa(Instr_eval a){}
    public void procesa(Si_param_re a){}
    public void procesa(No_param_re a){}
    public void procesa(Un_param_re a){}
    public void procesa(Muchos_param_re a){}
    public void procesa(Indir a){}
    public void procesa(Reg a){}
    public void procesa(Index a){}
    public void procesa(Menos a){}
    public void procesa(Not a){}
    public void procesa(Or a){}
    public void procesa(And a){}
    public void procesa(Mod a){}
    public void procesa(Div a){}
    public void procesa(Mul a){}
    public void procesa(Resta a){}
    public void procesa(Suma a){}
    public void procesa(Distinto a){}
    public void procesa(Igual a){}
    public void procesa(Menor_igual a){}
    public void procesa(Mayor_igual a){}
    public void procesa(Menor a){}
    public void procesa(Mayor a){}
    public void procesa(Asig a){}
    public void procesa(Null a){}
    public void procesa(Id a){}
    public void procesa(False a){}
    public void procesa(True a){}
    public void procesa(Literal_cadena a){}
    public void procesa(Literal_real a){}
    public void procesa(Literal_ent a){}
}
